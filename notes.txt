#in doku and to Basil

#Solved issues
   - Bad output widths solved!
   - Facet title heights now set from strwidth: ensures appropriate scaling,
     regardless of user supplied text sizes
   - Last label in plot wil always fit in plot area: overshoot cleverly determined
     and compensated

#Improved
   - Automatically determine xlim1 using pretty()
   - Automatically determine xlim2 using pretty()
   - xbrkint now cleverly done using pretty()
   - stratPlot now returns plot object + width
   - Relative sizes of plots based on relative maxima, not mean: in order to ensure
     correct calculation of relative widths i.e., some variables with small means
     or medians have large maxima. These would go beyond plot area if relative widths
     are based on a comparison of means or medians, rather than maxima

  - No variable should have ylim2 below respective group's xbrkint
  - L-R Arrangement of plots based on medians however.

#To do
- Make arg that determines L-R arrangment of plots accept arbitrary functions
- Fill dead links



###Multiple plots: with an ordinary for loop

- Ordinary for loop here

###Multiple plots: with parallel processing
If you have a multi-core computer and need to generate many pollen diagrams, you
can take advantage of R's parallel processing routines to speed things up as
demonstrated below.

```{r}

#Load libraries needed for parallel processing
library(doParallel)
library(foreach)
library(parallel)

#Register parallel cluster with n-1 cores
cl <- makeCluster(detectCores() - 1)
registerDoParallel(cl, cores = detectCores() - 1)

#Define libs needed by parallel cluster
libs <-

#Distribute plot tasks across the n-1 theads
foreach (i=unique(datL$entitynum), .packages=libs, .combine='c') %dopar% {

  #Subset data for ith entity
  dat_i <- datL[entitynum==plt]

  #Run stratPlot on subset


}
stopCluster(cl)

```

***
